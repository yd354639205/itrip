<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:component-scan base-package="cn.itrip.auth.service"/>
	<context:annotation-config />
	<context:property-placeholder location="classpath:database.properties"/>
	<!-- JNDI获取数据源(使用dbcp连接池) -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
		<property name="driverClassName" value="${mysql.driver}"/>
		<property name="url" value="${mysql.url}"/>
		<property name="username" value="${mysql.user}"/>
		<property name="password" value="${mysql.password}"/>
		<property name="initialSize" value="${mysql.initialSize}"/>
		<property name="maxActive" value="${mysql.maxActive}"/>
		<property name="maxIdle" value="${mysql.maxIdle}"/>
		<property name="minIdle" value="${mysql.minIdle}"/>
		<property name="maxWait" value="${mysql.maxWait}"/>
		<property name="removeAbandoned" value="${mysql.removeAbandoned}"/>
		<property name="removeAbandonedTimeout" value="${mysql.removeAbandonedTimeout}"/>
		<property name= "testWhileIdle" value="true"/>
		<property name= "timeBetweenEvictionRunsMillis" value="60000"/>
		<property name= "testOnBorrow" value="false"/>
		<property name= "testOnReturn" value="false"/>
		<property name= "validationQuery" value="select 1"/>
		<property name= "numTestsPerEvictionRun" value="${mysql.maxActive}"/>
	</bean>

	<!-- 事务管理   -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 配置mybatis SqlSessionFactoryBean -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>

	<aop:aspectj-autoproxy/>
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* *cn.itrip.auth.service..*(..))" id="transService"/>
		<aop:advisor advice-ref="myAdvice" pointcut-ref="transService"/>
	</aop:config>

	<tx:advice id="myAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="itriptx*"  propagation="REQUIRED" rollback-for="Exception"  />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.itrip.dao"/>
	</bean>
	<!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="500"/>
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="100"/>
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="1024"/>
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="30000"/>
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000"/>
		<!-- 连接空闲多久后释放, 当空闲时间>该值且空闲连接>最大空闲连接数时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000"/>
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="1500"/>
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="false"/>
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true"/>
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false"/>
	</bean>

	<!-- redis单机通过连接池 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool"
		  destroy-method="close">
		<constructor-arg ref="jedisPoolConfig"/>
		<!--<constructor-arg name="host" value="192.168.171.129"/>-->
		<constructor-arg value="192.168.171.131"/>
		<constructor-arg value="6379"/>
	</bean>
	<bean id="redisAPI" class="cn.itrip.common.RedisAPI">
		<property name="jedisPool" ref="jedisPool"/>
	</bean>

	<bean id="validationToken" class="cn.itrip.common.ValidationToken">
		<property name="redisAPI" ref="redisAPI" />
	</bean>
</beans>